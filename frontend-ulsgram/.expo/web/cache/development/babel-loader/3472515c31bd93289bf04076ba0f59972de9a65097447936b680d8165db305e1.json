{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post('http://192.168.1.3:8000/api/login', {\n          email: 'tucorreo@ejemplo.com',\n          password: '12345678'\n        });\n        Alert.alert('Login Exitoso', \"Token: \" + response.data.access_token);\n        console.log('User data:', response.data.user);\n      } catch (error) {\n        var _error$response;\n        console.error('Error de inicio de sesión:', ((_error$response = error.response) == null ? void 0 : _error$response.data) || error.message);\n        if (error.response) {\n          Alert.alert('Error del Servidor', JSON.stringify(error.response.data));\n        } else if (error.request) {\n          Alert.alert('Error de Red', 'No se recibió respuesta del servidor. Verifica la conexión y la URL.');\n        } else {\n          Alert.alert('Error Desconocido', error.message);\n        }\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      padding: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 10\n      },\n      children: \"Login\"\n    }), _jsx(Button, {\n      title: \"Iniciar sesi\\xF3n\",\n      onPress: handleLogin\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","Button","Alert","axios","jsx","_jsx","jsxs","_jsxs","LoginScreen","handleLogin","_ref","_asyncToGenerator","response","post","email","password","alert","data","access_token","console","log","user","error","_error$response","message","JSON","stringify","request","apply","arguments","style","padding","children","fontSize","marginBottom","title","onPress"],"sources":["C:/Users/Madeline/Documents/GitHub/ULSGRAMM/frontend-ulsgram/screens/Auth/LoginScreen.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Button, Alert } from 'react-native';\nimport axios from 'axios';\n\nexport default function LoginScreen() {\n  const handleLogin = async () => {\n    try {\n      // **¡CAMBIADO AQUÍ!**\n      const response = await axios.post('http://192.168.1.3:8000/api/login', {\n        email: 'tucorreo@ejemplo.com', // Asegúrate de que este usuario exista en tu DB de Laravel\n        password: '12345678', // Y que la contraseña sea correcta\n      });\n\n      Alert.alert('Login Exitoso', `Token: ${response.data.access_token}`);\n      console.log('User data:', response.data.user); // Para ver los datos del usuario en la consola\n    } catch (error) {\n      console.error('Error de inicio de sesión:', error.response?.data || error.message);\n      // Más detalles en el error para depuración\n      if (error.response) {\n        // El servidor respondió con un estado fuera del rango 2xx\n        Alert.alert('Error del Servidor', JSON.stringify(error.response.data));\n      } else if (error.request) {\n        // La petición fue hecha pero no se recibió respuesta (ej. fallo de red)\n        Alert.alert('Error de Red', 'No se recibió respuesta del servidor. Verifica la conexión y la URL.');\n      } else {\n        // Algo más causó el error\n        Alert.alert('Error Desconocido', error.message);\n      }\n    }\n  };\n\n  return (\n    <View style={{ padding: 20 }}>\n      <Text style={{ fontSize: 20, marginBottom: 10 }}>Login</Text>\n      <Button title=\"Iniciar sesión\" onPress={handleLogin} />\n    </View>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAE1B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1B,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,IAAMC,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QAEF,IAAMC,QAAQ,SAAST,KAAK,CAACU,IAAI,CAAC,mCAAmC,EAAE;UACrEC,KAAK,EAAE,sBAAsB;UAC7BC,QAAQ,EAAE;QACZ,CAAC,CAAC;QAEFb,KAAK,CAACc,KAAK,CAAC,eAAe,cAAYJ,QAAQ,CAACK,IAAI,CAACC,YAAc,CAAC;QACpEC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,QAAQ,CAACK,IAAI,CAACI,IAAI,CAAC;MAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;QAAA,IAAAC,eAAA;QACdJ,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACV,QAAQ,qBAAdW,eAAA,CAAgBN,IAAI,KAAIK,KAAK,CAACE,OAAO,CAAC;QAElF,IAAIF,KAAK,CAACV,QAAQ,EAAE;UAElBV,KAAK,CAACc,KAAK,CAAC,oBAAoB,EAAES,IAAI,CAACC,SAAS,CAACJ,KAAK,CAACV,QAAQ,CAACK,IAAI,CAAC,CAAC;QACxE,CAAC,MAAM,IAAIK,KAAK,CAACK,OAAO,EAAE;UAExBzB,KAAK,CAACc,KAAK,CAAC,cAAc,EAAE,sEAAsE,CAAC;QACrG,CAAC,MAAM;UAELd,KAAK,CAACc,KAAK,CAAC,mBAAmB,EAAEM,KAAK,CAACE,OAAO,CAAC;QACjD;MACF;IACF,CAAC;IAAA,gBAxBKf,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAkB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwBhB;EAED,OACEtB,KAAA,CAACR,IAAI;IAAC+B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GAC3B3B,IAAA,CAACL,IAAI;MAAC8B,KAAK,EAAE;QAAEG,QAAQ,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAAK,CAAM,CAAC,EAC7D3B,IAAA,CAACJ,MAAM;MAACkC,KAAK,EAAC,mBAAgB;MAACC,OAAO,EAAE3B;IAAY,CAAE,CAAC;EAAA,CACnD,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}